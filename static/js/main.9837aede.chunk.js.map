{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortField","goodsFromServer","App","useState","sortField","setSortField","reversedField","setReversedField","visibleGoods","goods","preparedGoods","sort","good1","good2","alphabet","localeCompare","length","reverse","getPreparedGoods","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAsBKA,E,0DAlBQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAQGD,K,oBAAAA,E,iBAAAA,M,KAiCE,IAAME,EAAgB,WAC3B,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0CF,oBAAS,GAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACMC,EA/BR,SACEC,EADF,GAGG,IADCL,EACF,EADEA,UAAWE,EACb,EADaA,cAEPI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EAAUc,SACb,OAAOF,EAAMG,cAAcF,GAE7B,KAAKb,EAAUgB,OACb,OAAOJ,EAAMI,OAASH,EAAMG,OAE9B,QACE,OAAO,MAKXV,GACFI,EAAcO,UAGTP,EAMcQ,CACnBjB,EAAiB,CAAEG,YAAWE,kBAOhC,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,2BAAsBf,IAAcJ,EAAUc,SAAW,GAAK,aACvEO,QAAS,kBAAMhB,EAAaL,EAAUc,WAHxC,iCAQA,wBACEM,KAAK,SACLD,UAAS,2BAAsBf,IAAcJ,EAAUgB,OAAS,GAAK,aACrEK,QAAS,kBAAMhB,EAAaL,EAAUgB,SAHxC,4BAQA,wBACEI,KAAK,SACLD,UAAS,2BAAsBb,EAAgB,GAAK,aACpDe,QAAS,kBAAMd,GAAkBD,IAHnC,sBASGF,GAAaE,IACZ,wBACEc,KAAK,SACLD,UAAU,4BACVE,QAAS,WApCnBhB,EAAa,IACbE,GAAiB,IAgCT,sBAcN,6BACGC,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC5GlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9837aede.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface SortParams {\n  sortField: string;\n  reversedField: true | false;\n}\n\nenum SortField {\n  alphabet = 'alphabet',\n  length = 'length',\n}\n\nfunction getPreparedGoods(\n  goods: string[],\n  { sortField, reversedField }: SortParams,\n) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortField.alphabet:\n          return good1.localeCompare(good2);\n\n        case SortField.length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reversedField) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState('');\n  const [reversedField, setReversedField] = useState(false);\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer, { sortField, reversedField },\n  );\n  const reset = () => {\n    setSortField('');\n    setReversedField(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-success${sortField === SortField.alphabet ? '' : ' is-light'}`}\n          onClick={() => setSortField(SortField.alphabet)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success${sortField === SortField.length ? '' : ' is-light'}`}\n          onClick={() => setSortField(SortField.length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning${reversedField ? '' : ' is-light'}`}\n          onClick={() => setReversedField(!reversedField)}\n        >\n          Reverse\n        </button>\n\n        {\n          (sortField || reversedField) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                reset();\n              }}\n            >\n              Reset\n            </button>\n          )\n        }\n\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}